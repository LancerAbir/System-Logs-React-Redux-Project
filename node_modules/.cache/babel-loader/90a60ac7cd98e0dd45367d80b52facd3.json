{"ast":null,"code":"import _objectSpread from \"/Users/lancer_abir/Desktop/react-app-redux-project/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from '../actions/types';\n/* \nGET_LOGS,\nADD_LOG,\nDELETE_LOG,\nSET_CURRENT,\nCLEAR_CURRENT,\nUPDATE_LOG,\nCLEAR_LOGS,\nSET_LOADING,\nLOGS_ERROR,\nSEARCH_LOGS,\nGET_TECHS,\nADD_TECH,\nDELETE_TECH,\nTECHS_ERROR,\n */\n// javaScript object\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      {\n        return _objectSpread({}, state, {\n          loading: true\n        });\n      }\n\n    case GET_LOGS:\n      {\n        return _objectSpread({}, state, {\n          logs: action.payload,\n          loading: false\n        });\n      }\n\n    case ADD_LOG:\n      {\n        return _objectSpread({}, state, {\n          logs: [...state.logs, action.payload],\n          loading: false\n        });\n      }\n\n    case DELETE_LOG:\n      {\n        return _objectSpread({}, state, {\n          logs: state.logs.filter(log => log.id !== action.payload),\n          loading: false\n        });\n      }\n\n    case UPDATE_LOG:\n      {\n        return _objectSpread({}, state, {\n          logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log),\n          loading: false\n        });\n      }\n\n    case SEARCH_LOGS:\n      {\n        return _objectSpread({}, state, {\n          logs: action.payload,\n          loading: false\n        });\n      }\n\n    case SET_CURRENT:\n      {\n        return _objectSpread({}, state, {\n          current: action.payload\n        });\n      }\n\n    case CLEAR_CURRENT:\n      {\n        return _objectSpread({}, state, {\n          current: null\n        });\n      }\n\n    case LOGS_ERROR:\n      {\n        console.error(action.payload);\n        return _objectSpread({}, state, {\n          error: action.payload\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/lancer_abir/Desktop/react-app-redux-project/src/reducers/logReducer.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SEARCH_LOGS","initialState","logs","current","loading","error","state","action","type","payload","filter","log","id","map","console"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,OAA5C,EAAqDC,UAArD,EAAiEC,WAAjE,EAA8EC,aAA9E,EAA6FC,UAA7F,EAAyGC,WAAzG,QAA4H,kBAA5H;AACA;;;;;;;;;;;;;;;;AAiBA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,OAAO,EAAE,IAFQ;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKf,WAAL;AAAkB;AACd,iCACOa,KADP;AAEIF,UAAAA,OAAO,EAAE;AAFb;AAIH;;AACD,SAAKZ,QAAL;AAAe;AACX,iCACOc,KADP;AAEIJ,UAAAA,IAAI,EAAEK,MAAM,CAACE,OAFjB;AAGIL,UAAAA,OAAO,EAAE;AAHb;AAKH;;AACD,SAAKT,OAAL;AAAc;AACV,iCACOW,KADP;AAEIJ,UAAAA,IAAI,EAAE,CAAC,GAAGI,KAAK,CAACJ,IAAV,EAAgBK,MAAM,CAACE,OAAvB,CAFV;AAGIL,UAAAA,OAAO,EAAE;AAHb;AAKH;;AACD,SAAKR,UAAL;AAAiB;AACb,iCACOU,KADP;AAEIJ,UAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWQ,MAAX,CAAkBC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAA3C,CAFV;AAGIL,UAAAA,OAAO,EAAE;AAHb;AAKH;;AACD,SAAKL,UAAL;AAAiB;AACb,iCACOO,KADP;AAEIJ,UAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWW,GAAX,CAAeF,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACE,OAAP,CAAeG,EAA1B,GAA+BL,MAAM,CAACE,OAAtC,GAAgDE,GAAtE,CAFV;AAGIP,UAAAA,OAAO,EAAE;AAHb;AAKH;;AACD,SAAKJ,WAAL;AAAkB;AACd,iCACOM,KADP;AAEIJ,UAAAA,IAAI,EAAEK,MAAM,CAACE,OAFjB;AAGIL,UAAAA,OAAO,EAAE;AAHb;AAKH;;AACD,SAAKP,WAAL;AAAkB;AACd,iCACOS,KADP;AAEIH,UAAAA,OAAO,EAAEI,MAAM,CAACE;AAFpB;AAIH;;AACD,SAAKX,aAAL;AAAoB;AAChB,iCACOQ,KADP;AAEIH,UAAAA,OAAO,EAAE;AAFb;AAIH;;AACD,SAAKT,UAAL;AAAiB;AACboB,QAAAA,OAAO,CAACT,KAAR,CAAcE,MAAM,CAACE,OAArB;AACA,iCACOH,KADP;AAEID,UAAAA,KAAK,EAAEE,MAAM,CAACE;AAFlB;AAIH;;AACD;AAAS,aAAOH,KAAP;AA7Db;AA+DH,CAhED","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from '../actions/types';\n/* \nGET_LOGS,\nADD_LOG,\nDELETE_LOG,\nSET_CURRENT,\nCLEAR_CURRENT,\nUPDATE_LOG,\nCLEAR_LOGS,\nSET_LOADING,\nLOGS_ERROR,\nSEARCH_LOGS,\nGET_TECHS,\nADD_TECH,\nDELETE_TECH,\nTECHS_ERROR,\n */\n\n// javaScript object\nconst initialState = {\n    logs: null,\n    current: null,\n    loading: false,\n    error: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SET_LOADING: {\n            return {\n                ...state,\n                loading: true,\n            }\n        }\n        case GET_LOGS: {\n            return {\n                ...state,\n                logs: action.payload,\n                loading: false\n            }\n        }\n        case ADD_LOG: {\n            return {\n                ...state,\n                logs: [...state.logs, action.payload],\n                loading: false\n            }\n        }\n        case DELETE_LOG: {\n            return {\n                ...state,\n                logs: state.logs.filter(log => log.id !== action.payload),\n                loading: false\n            }\n        }\n        case UPDATE_LOG: {\n            return {\n                ...state,\n                logs: state.logs.map(log => log.id === action.payload.id ? action.payload : log),\n                loading: false\n            }\n        }\n        case SEARCH_LOGS: {\n            return {\n                ...state,\n                logs: action.payload,\n                loading: false\n            }\n        }\n        case SET_CURRENT: {\n            return {\n                ...state,\n                current: action.payload,\n            }\n        }\n        case CLEAR_CURRENT: {\n            return {\n                ...state,\n                current: null,\n            }\n        }\n        case LOGS_ERROR: {\n            console.error(action.payload);\n            return {\n                ...state,\n                error: action.payload\n            }\n        }\n        default: return state\n    }\n}"]},"metadata":{},"sourceType":"module"}