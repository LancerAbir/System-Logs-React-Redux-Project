{"ast":null,"code":"import _slicedToArray from \"/Users/lancer_abir/Desktop/react-app-redux-project/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/lancer_abir/Desktop/react-app-redux-project/src/Components/logs/Logs.js\";\nimport React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem';\n/** \n *! Materialize CSS er Loading icon\n **/\n\nimport Preloader from '../layout/Preloader';\n/** \n *!  Component এর সাথে Redux এর connect করার জন্য \n **  { connect } redux এর একটি built in function\n**/\n\nimport { connect } from 'react-redux';\n\nconst Logs = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        logs = _useState2[0],\n        setLogs = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    getLogs(); // eslint-disable-next-line\n  }, []);\n\n  const getLogs = async () => {\n    setLoading(true);\n    const res = await fetch('/logs');\n    const data = await res.json();\n    /** \n     *! db.json file এর logs object এর all data এখানে --> (data)\n    **/\n\n    setLogs(data);\n    setLoading(false);\n  };\n\n  if (loading) {\n    return React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"ul\", {\n    className: \"collection with-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"collection-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"System Logs \")), !loading && logs.length === 0 ? React.createElement(\"p\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" no logs to show... \") : logs.map(log => React.createElement(LogItem, {\n    log: log,\n    key: log.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n/** \n **  এই একটি built in function\n **  এই function টা একটি object return করবে\n **  store -> (index.js) যে data আছে এই component এর props হিসেবে pass করবে\n**/\n\n\nfunction mapStateToProps(state) {\n  return {\n    log: state.log\n  };\n} //connect() এই function টা call হওয়ার পরে component return করবে যার child/argument হল Logs\n\n\nexport default connect(mapStateToProps)(Logs);","map":{"version":3,"sources":["/Users/lancer_abir/Desktop/react-app-redux-project/src/Components/logs/Logs.js"],"names":["React","useState","useEffect","LogItem","Preloader","connect","Logs","logs","setLogs","loading","setLoading","getLogs","res","fetch","data","json","length","map","log","id","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;AAGA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA;;;;;AAIA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBAESL,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,QAERM,IAFQ;AAAA,QAEFC,OAFE;;AAAA,qBAGeP,QAAQ,CAAC,KAAD,CAHvB;AAAA;AAAA,QAGRQ,OAHQ;AAAA,QAGCC,UAHD;;AAKfR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,GADK,CAEZ;AAEH,GAJQ,EAIN,EAJM,CAAT;;AAOA,QAAMA,OAAO,GAAG,YAAY;AACxBD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA;;;;AAGAP,IAAAA,OAAO,CAACM,IAAD,CAAP;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAVD;;AAYA,MAAID,OAAJ,EAAa;AACT,WAAO,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAIK,CAACA,OAAD,IAAYF,IAAI,CAACS,MAAL,KAAgB,CAA5B,GACG;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,GAGOT,IAAI,CAACU,GAAL,CAASC,GAAG,IAAI,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,GAAd;AAAmB,IAAA,GAAG,EAAEA,GAAG,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,CAPZ,CADJ;AAYH,CAxCD;AA0CA;;;;;;;AAKA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHH,IAAAA,GAAG,EAAEG,KAAK,CAACH;AADR,GAAP;AAGH,C,CAED;;;AACA,eAAeb,OAAO,CAACe,eAAD,CAAP,CAAyBd,IAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LogItem from './LogItem';\n\n/** \n *! Materialize CSS er Loading icon\n **/\nimport Preloader from '../layout/Preloader';\n\n/** \n *!  Component এর সাথে Redux এর connect করার জন্য \n **  { connect } redux এর একটি built in function\n**/\nimport { connect } from 'react-redux';\n\n\nconst Logs = () => {\n\n    const [logs, setLogs] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        getLogs();\n        // eslint-disable-next-line\n\n    }, [])\n\n\n    const getLogs = async () => {\n        setLoading(true);\n        const res = await fetch('/logs')\n        const data = await res.json()\n\n        /** \n         *! db.json file এর logs object এর all data এখানে --> (data)\n        **/\n        setLogs(data)\n        setLoading(false)\n    }\n\n    if (loading) {\n        return <Preloader />\n    }\n\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\">\n                <h4 className=\"center\">System Logs </h4>\n            </li>\n            {!loading && logs.length === 0 ? (\n                <p className=\"center\"> no logs to show... </p>\n            ) : (\n                    logs.map(log => <LogItem log={log} key={log.id} />)\n                )}\n        </ul>\n    );\n};\n\n/** \n **  এই একটি built in function\n **  এই function টা একটি object return করবে\n **  store -> (index.js) যে data আছে এই component এর props হিসেবে pass করবে\n**/\nfunction mapStateToProps(state) {\n    return {\n        log: state.log,\n    }\n}\n\n//connect() এই function টা call হওয়ার পরে component return করবে যার child/argument হল Logs\nexport default connect(mapStateToProps)(Logs);"]},"metadata":{},"sourceType":"module"}