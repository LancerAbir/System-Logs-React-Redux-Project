{"ast":null,"code":"import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG } from './types';\n/* \nGET_LOGS\nADD_LOG\nDELETE_LOG\nSET_CURRENT\nCLEAR_CURRENT\nUPDATE_LOG\nCLEAR_LOGS\nSET_LOADING\nLOGS_ERROR\nSEARCH_LOGS\nGET_TECHS\nADD_TECH\nDELETE_TECH\nTECHS_ERROR\n */\n\n/* export const getLogs = () => {\n    return async (dispatch) => {\n        setLoading();\n\n        const res = await fetch('/logs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_LOGS,\n            payLoad: data\n        })\n    }\n} */\n// Get logs from server\n\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs');\n    const data = await res.json();\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Add new log\n\nexport const addLogs = log => async dispatch => {\n  try {\n    setLoading();\n    const res = await fetch('/logs', {\n      method: \"POST\",\n      body: JSON.stringify(log),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await res.json();\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Delete log from server\n\nexport const deleteLogs = id => async dispatch => {\n  try {\n    setLoading();\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE'\n    });\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.data\n    });\n  }\n}; // Set current og\n\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n}; // Clear current og\n\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n}; // Set loading to true\n\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};","map":{"version":3,"sources":["/Users/lancer_abir/Desktop/react-app-redux-project/src/actions/logActions.js"],"names":["GET_LOGS","SET_LOADING","LOGS_ERROR","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","getLogs","dispatch","setLoading","res","fetch","data","json","type","payload","err","response","addLogs","log","method","body","JSON","stringify","headers","deleteLogs","id","setCurrent","clearCurrent"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,UAAhC,EAA4CC,OAA5C,EAAqDC,UAArD,EAAiEC,WAAjE,EAA8EC,aAA9E,EAA6FC,UAA7F,QAA+G,SAA/G;AAIA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;AAeA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC3C,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEf,QADD;AAELgB,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOI,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEb,UADD;AAELc,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMM,OAAO,GAAIC,GAAD,IAAS,MAAMX,QAAN,IAAkB;AAC9C,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,OAAD,EAAU;AAC7BS,MAAAA,MAAM,EAAE,MADqB;AAE7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAFuB;AAG7BK,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAHoB,KAAV,CAAvB;AAOA,UAAMZ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEZ,OADD;AAELa,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAIH,GAhBD,CAgBE,OAAOI,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEb,UADD;AAELc,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAvBM,C,CAyBP;;AACA,OAAO,MAAMa,UAAU,GAAIC,EAAD,IAAQ,MAAMlB,QAAN,IAAkB;AAChD,MAAI;AACAC,IAAAA,UAAU;AAEV,UAAME,KAAK,CAAE,SAAQe,EAAG,EAAb,EAAgB;AACvBN,MAAAA,MAAM,EAAE;AADe,KAAhB,CAAX;AAGAZ,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEX,UADD;AAELY,MAAAA,OAAO,EAAEW;AAFJ,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOV,GAAP,EAAY;AACVR,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEb,UADD;AAELc,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaL;AAFjB,KAAD,CAAR;AAIH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMe,UAAU,GAAIR,GAAD,IAAS;AAC/B,SAAO;AACHL,IAAAA,IAAI,EAAEV,WADH;AAEHW,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMS,YAAY,GAAG,MAAM;AAC9B,SAAO;AACHd,IAAAA,IAAI,EAAET;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMI,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHK,IAAAA,IAAI,EAAEd;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG } from './types';\n\n\n\n/* \nGET_LOGS\nADD_LOG\nDELETE_LOG\nSET_CURRENT\nCLEAR_CURRENT\nUPDATE_LOG\nCLEAR_LOGS\nSET_LOADING\nLOGS_ERROR\nSEARCH_LOGS\nGET_TECHS\nADD_TECH\nDELETE_TECH\nTECHS_ERROR\n */\n\n/* export const getLogs = () => {\n    return async (dispatch) => {\n        setLoading();\n\n        const res = await fetch('/logs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_LOGS,\n            payLoad: data\n        })\n    }\n} */\n\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/logs');\n        const data = await res.json();\n\n        dispatch({\n            type: GET_LOGS,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.data\n        })\n    }\n}\n\n// Add new log\nexport const addLogs = (log) => async dispatch => {\n    try {\n        setLoading();\n\n        const res = await fetch('/logs', {\n            method: \"POST\",\n            body: JSON.stringify(log),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const data = await res.json();\n\n        dispatch({\n            type: ADD_LOG,\n            payload: data\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.data\n        })\n    }\n}\n\n// Delete log from server\nexport const deleteLogs = (id) => async dispatch => {\n    try {\n        setLoading();\n\n        await fetch(`/logs/${id}`, {\n            method: 'DELETE'\n        });\n        dispatch({\n            type: DELETE_LOG,\n            payload: id\n        })\n    } catch (err) {\n        dispatch({\n            type: LOGS_ERROR,\n            payload: err.response.data\n        })\n    }\n}\n\n// Set current og\nexport const setCurrent = (log) => {\n    return {\n        type: SET_CURRENT,\n        payload: log\n    }\n}\n\n// Clear current og\nexport const clearCurrent = () => {\n    return {\n        type: CLEAR_CURRENT,\n    }\n}\n\n// Set loading to true\nexport const setLoading = () => {\n    return {\n        type: SET_LOADING,\n    }\n}\n"]},"metadata":{},"sourceType":"module"}